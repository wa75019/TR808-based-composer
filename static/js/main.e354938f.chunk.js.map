{"version":3,"sources":["redux/actions/columnNumberActions.js","redux/reducers/columnNumberReducers.js","redux/reducers/index.js","redux/store.js","components/UI/Breakpoints.js","components/UI/GlobalStyle.js","components/Header/index.js","components/Footer/index.js","components/UI/Layout.js","components/Home/Select.js","assets/sounds/kick.wav","assets/sounds/snare.wav","assets/sounds/hihats.wav","assets/sounds/tom.wav","assets/sounds/cowbell.wav","assets/sounds/maracas.wav","assets/sounds/congas.wav","assets/sounds/clava.wav","assets/sounds/rimshot.wav","assets/sounds/clap.wav","assets/sounds/cymbal.wav","components/Home/Buttons.js","components/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["MESURES8","MESURES4","MESURES2","initialState","columnNumber","rootReducer","combineReducers","state","action","type","store","createStore","size","xs","sm","sm2","lg","device","GlobalStyle","createGlobalStyle","props","theme","backgroundColor","mainColor","Breakpoints","Header","isLight","handleToggleTheme","Wrapper","onClick","styled","header","Footer","footer","Layout","children","useState","setIsLight","lightTheme","darkTheme","Main","div","options","key","label","value","inputChange","event","target","dispatch","select","inputColor","Select","onChange","map","option","ButtonsGrid","GridColumn","GridButton","instrument","isActive","activeColor","rest","classes","className","GridInstrument","h2","InstrumentName","Play","button","TempoDiv","Tempo","input","connect","grid","index","column","note","soundPlay","mySampler","current","triggerAttackRelease","push","gridData","setGridData","instrumentList","inst","Object","entries","i","updatedGrid","useRef","useEffect","sampler","Tone","A4","kick","snare","B4","clap","hihats","C4","rimshot","cymbal","D4","tom","cowbell","E4","clava","maracas","G4","congas","toDestination","then","nbMesures","isPlaying","setIsPlaying","currentColumn","setCurrentColumn","tempo","setTempo","mySequencer","Sequencer","time","length","columnIndex","classNames","instrumentIndex","clickedColumn","clickedNote","cell","cellIndex","cellCopy","item","stop","start","bpm","PlayMusic","Styled","Home","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e354938f.chunk.js","sourcesContent":["import { store } from '../store'\n\nexport const MESURES8 = \"MESURES8\"\nexport const MESURES4 = \"MESURES4\"\nexport const MESURES2 = \"MESURES2\"\n\nexport const mesures8 = () => {\n    store.dispatch({type : MESURES8})\n}\nexport const mesures4 = () => {\n    store.dispatch({type : MESURES4})\n}\nexport const mesures2 = () => {\n    store.dispatch({type : MESURES2})\n}","import { MESURES8, MESURES4, MESURES2 } from '../actions/columnNumberActions'\n\nconst initialState = {\n    columnNumber : 32,\n}\nexport default function columnNumberReducers (state = initialState, action) {\n    switch (action.type){\n        case MESURES8 : {\n            return {\n                ...state,\n                columnNumber : 32,\n            }    \n        } \n        case MESURES4 : {\n            return {\n                ...state,\n                columnNumber : 16,\n            }\n        }\n        case MESURES2 : {\n            return {\n                ...state,\n                columnNumber : 8,\n            }\n        }\n        default: return state\n    }\n}","import { combineReducers } from 'redux'\nimport columnNumberReducers from './columnNumberReducers'\n\nconst rootReducer = combineReducers({\n    columnNumber : columnNumberReducers\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from './reducers/index'\n\nexport const store = createStore(rootReducer)","const size = {\n    xs: '576px',\n    sm: '856px',\n    sm2: '756px',\n    lg: '1200px'\n   }\nconst device = {\n    xs: `(min-width: ${size.xs})`,\n    sm: `(min-width: ${size.sm})`,\n    sm2: `(min-width: ${size.sm2})`,\n    lg: `(min-width: ${size.lg})`\n   }\n\nexport default {size, device}","import { createGlobalStyle } from \"styled-components\";\nimport Breakpoints from \"./Breakpoints\";\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        transition : linear 0.25s;\n        background-color : ${(props) => props.theme.backgroundColor};\n        color : ${(props) => props.theme.mainColor};\n        font-family : Poppins !important;\n    }\n    button{\n        font-family : Poppins !important;\n        padding : 12px 20px;\n        background-color : ${(props) => props.theme.backgroundColor};\n        color : ${(props) => props.theme.mainColor};\n        cursor : pointer;\n        border : 1px solid;\n        border-radius : 4px;\n        transition: linear 0.25s;\n    }\n    button:hover{\n        color : ${(props) => props.theme.backgroundColor};\n        background-color : ${(props) => props.theme.mainColor};\n    }\n    h1, h2, h3, h4{\n        letter-spacing : 2px\n    }\n    h1{\n        font-size : 1.6rem;\n    }\n    h2{\n        font-size : 1.2rem;\n        @media only screen and ${Breakpoints.device.sm2}{\n            font-size : 1.4rem;\n        }\n    }\n    nav{\n        display : flex;\n    }\n`;\n\nexport default GlobalStyle;","import styled from 'styled-components'\n\nexport default function Header({isLight, handleToggleTheme}) {\n    return (\n        <Wrapper>\n            <h1>Rythm Composer TR808 based</h1>\n            <button onClick={handleToggleTheme}>Switch to {isLight ? \"dark\" : \"light\"} theme</button>\n        </Wrapper>\n        \n    )\n}\nconst Wrapper = styled.header`\nposition: fixed;\nwidth: 100%;\nheight : 80px;\ndisplay : flex;\njustify-content : space-evenly;\npadding : 0 24px;\nalign-items : center;\nborder-bottom : 1px solid;\n& a{\n    text-decoration : none;\n    color : inherit;\n}\n& a:first-child{\n    padding-right : 12px;\n}\n\n\n`\n\n","import styled from 'styled-components'\nimport Breakpoints from 'components/UI/Breakpoints'\n\nexport default function Footer(){\n    return (\n        <Wrapper><p>Proudly propulsed by WA</p></Wrapper>\n    )\n}\nconst Wrapper = styled.footer`\nposition: fixed;\nbottom: 0;\nleft: 0;\nwidth: 100%;\nheight : 20px;\ndisplay : flex;\njustify-content : center;\nalign-items : center;\n    @media only screen and ${Breakpoints.device.sm}{\n        border-top : 1px solid;\n    }\n\n`\n\n","import styled, { ThemeProvider } from 'styled-components'\nimport { useState } from 'react'\n\nimport GlobalStyle from \"./GlobalStyle\"\nimport lightTheme from \"./themes/light.json\"\nimport darkTheme from \"./themes/dark.json\"\nimport Header from \"../Header/index\"\nimport Footer from \"../Footer/index\"\n\n\nexport default function Layout({children}){\n    const [isLight, setIsLight] = useState(false);\n\n    function handleToggleTheme (){\n        setIsLight(!isLight)\n    }\n    return (\n    <ThemeProvider theme={isLight ? lightTheme : darkTheme}>\n        <Wrapper>\n            <GlobalStyle />\n                <Header isLight={isLight} handleToggleTheme={handleToggleTheme}/>\n                    <Main>\n                        {children}\n                    </Main>\n                <Footer />\n        </Wrapper>\n    </ThemeProvider>\n    )\n}\n\n\nconst Wrapper = styled.div`\nwidth : 100%;\n`\n\nconst Main = styled.div`\nmin-height: calc(100vh - 160px);\nwidth : 96%;\nmax-width : 1240px;\nmargin: auto;\n`","import styled from 'styled-components'\nimport { mesures8, mesures4, mesures2 } from '../../redux/actions/columnNumberActions'\n\n\nconst options = [\n    {\n        key: \"1\",\n        label: \"8 mesures\",\n        value : \"8\"\n    },\n    {\n        key : \"2\",\n        label: \"4 mesures\",\n        value : \"4\"\n    },\n    {\n        key : \"3\",\n        label: \"2 mesures\",\n        value : \"2\"\n    }\n]\n\n// set numbers of columns\nconst inputChange = (event) => {\n    \n    switch(event.target.value) {\n        case '8' : {\n            return (mesures8())  \n        }\n        case '4' : {\n           return  (mesures4())  \n        }\n        case '2' : {\n            return (mesures2())  \n        }\n        default : return 8\n    }\n}\n\nconst Select = () => {\n    \n    return (\n        <Wrapper onChange={inputChange}>\n            {options.map((option)=>(\n                    <option key={option.key} value = {option.value}>{option.label}</option>\n                ))}\n        </Wrapper>\n    )\n\n    \n}\nconst Wrapper = styled.select`\n    text-align: center;\n    margin-top :  150px; \n    margin-bottom : 60px; \n    margin-left: auto;\n    margin-right: auto;\n    width : 120px;\n    background-color : ${props => props.theme.inputColor};\n    cursor : pointer;\n    border-color : ${props => props.theme.mainColor};\n\n`\n\n\nexport default Select\n","export default __webpack_public_path__ + \"static/media/kick.83c4a2e1.wav\";","export default __webpack_public_path__ + \"static/media/snare.efcde53b.wav\";","export default __webpack_public_path__ + \"static/media/hihats.a5f4d34e.wav\";","export default __webpack_public_path__ + \"static/media/tom.df60e1a5.wav\";","export default __webpack_public_path__ + \"static/media/cowbell.4d72575a.wav\";","export default __webpack_public_path__ + \"static/media/maracas.72f3553d.wav\";","export default __webpack_public_path__ + \"static/media/congas.a9a9ca9f.wav\";","export default __webpack_public_path__ + \"static/media/clava.0726040a.wav\";","export default __webpack_public_path__ + \"static/media/rimshot.13ecc18f.wav\";","export default __webpack_public_path__ + \"static/media/clap.47f2b69d.wav\";","export default __webpack_public_path__ + \"static/media/cymbal.39a59ef5.wav\";","import styled from 'styled-components'\nimport Breakpoints from 'components/UI/Breakpoints'\nimport './Buttons.css'\nimport { connect } from 'react-redux'\nimport { useState, useEffect, useRef } from 'react'\n\nimport * as Tone from 'tone'\nimport classNames from 'classnames'\nimport kick from 'assets/sounds/kick.wav'\nimport snare from 'assets/sounds/snare.wav'\nimport hihats from 'assets/sounds/hihats.wav'\nimport tom from 'assets/sounds/tom.wav'\nimport cowbell from 'assets/sounds/cowbell.wav'\nimport maracas from 'assets/sounds/maracas.wav'\nimport congas from 'assets/sounds/congas.wav'\nimport clava from 'assets/sounds/clava.wav'\nimport rimshot from 'assets/sounds/rimshot.wav'\nimport clap from 'assets/sounds/clap.wav'\nimport cymbal from 'assets/sounds/cymbal.wav'\n\n\nconst Buttons = (props) => {\n\n//Generate grid\nconst grid = []\n    for (let index = 0; index < props.columnNumber.columnNumber; index++) {\n         let column = [\n            { instrument : \"Congas\", isActive : false, activeColor : 'cream', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"G4\"], 4)} },\n            { instrument : \"Maracas\", isActive : false, activeColor : 'orange', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"E#4\"], 4)} },\n            { instrument : \"Clava\", isActive : false, activeColor : 'yellow', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"E4\"], 4)} },\n            { instrument : \"Cowbell\", isActive : false, activeColor : 'red', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"D#4\"], 4)} },\n            { instrument : \"Tom\", isActive : false, activeColor : 'cream', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"D4\"], 2)} },\n            { instrument : \"Cymbal\", isActive : false, activeColor : 'orange', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"C#4\"], 4)} },\n            { instrument : \"Rimshot\", isActive : false, activeColor : 'yellow', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"C4\"], 4)} },\n            { instrument : \"Hihat\", isActive : false, activeColor : 'red', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"B#4\"], 4)} },\n            { instrument : \"Clap\", isActive : false, activeColor : 'cream', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"B4\"], 4)} },\n            { instrument : \"Snare\", isActive : false, activeColor : 'orange', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"A#4\"], 4)} },\n            { instrument : \"Kick\", isActive : false, activeColor : 'yellow', note : {soundPlay: () => mySampler.current.triggerAttackRelease([\"A4\"], 1)} },    \n        ];\n        grid.push(column);\n    }\n    \n    const [gridData, setGridData] = useState(grid)\n//Generate instrument list\n    const instrumentList = []\n    const inst = Object.entries(grid[0])\n    for (let i = 0; inst[i]; i++) { \n    instrumentList.push(inst[i][1].instrument)\n    }\n    var updatedGrid = []\n//Regenerate Grid with instruments clicked\n    function handleNoteClicked (clickedColumn, clickedNote) {\n        \n        updatedGrid = gridData.map((column, columnIndex) =>\n            column.map((cell, cellIndex) => {\n                var cellCopy = cell\n                \n                \n            if(columnIndex === clickedColumn && cellIndex === clickedNote) {\n                cellCopy.isActive = !cell.isActive\n                cellCopy.note.soundPlay()\n            }\n                return cellCopy\n        })\n        )\n        \n        setGridData(updatedGrid)\n    }\n\n//Initialize Tone js\n    const mySampler = useRef(null)\n    useEffect(() => {\n        const sampler = new Tone.Sampler({\n            \n                A4: kick,\n                \"A#4\": snare,\n                B4: clap,\n                \"B#4\": hihats,\n                C4: rimshot,\n                \"C#4\": cymbal,\n                D4: tom,\n                \"D#4\": cowbell,\n                E4: clava,               \n                \"E#4\": maracas,\n                G4: congas,\n                \n        }).toDestination();\n        \n        Tone.loaded().then(() => {\n            mySampler.current = sampler\n        })\n\n    }, [])\n    var nbMesures = []\n    useEffect(()=>{     \n        for (let i = 0; i<props.columnNumber.columnNumber; i++) {\n            nbMesures.push(i)\n        }\n    },[props.columnNumber.columnNumber] )\n  \n\n//Play music\n\n    const [isPlaying, setIsPlaying] = useState(false)\n    const [currentColumn, setCurrentColumn] = useState(null)\n    const [tempo, setTempo] = useState(100)\n    \n    const mySequencer = useRef(null)\n    useEffect(()=>{\n        const Sequencer = new Tone.Sequence((time, index) =>{\n        setCurrentColumn(index)\n\n        for(let i = 0; i<instrumentList.length; i++)\n        if (gridData[index][i].isActive) {\n            gridData[index][i].note.soundPlay()\n        }\n        },nbMesures)\n\n        Tone.loaded().then(()=>{\n            mySequencer.current = Sequencer\n        })\n    }, [props.columnNumber.columnNumber])\n    const handleChangeTempo = (event) => {\n        setTempo(event.target.value)\n    }\n    const PlayMusic = () => {\n    \n        Tone.start()\n\n    if (isPlaying) {\n        setIsPlaying(false)\n        setCurrentColumn(null)\n        Tone.Transport.stop()\n        mySequencer.current.stop()\n        return\n    }\n    setIsPlaying(true)\n    mySequencer.current.start()\n    Tone.Transport.start()\n    Tone.Transport.bpm.value = tempo\n\n}   \n    \n\n    return (\n        <Wrapper>\n            <ButtonsGrid className=\"grid-column\">\n                {gridData.map((column, columnIndex) => (\n                    <GridColumn className={classNames(\"note-column\", {\"note-column--active\" : currentColumn === columnIndex})} key={columnIndex + \"column\"}>\n                        {column.map(( { instrument, isActive, activeColor }, instrumentIndex)=>(\n                            <GridButton instrument ={instrument}\n                            isActive={isActive}\n                            activeColor={activeColor}\n                            onClick={()=>handleNoteClicked(columnIndex, instrumentIndex)}\n                            key={instrument + columnIndex}>                                \n                            </GridButton>                                                \n                        ))}\n                                                        \n                    </GridColumn>\n                ))}\n                <InstrumentName>\n                    {instrumentList.map((item, index)=>(\n                        <GridInstrument key={index}>\n                            {item}\n                        </GridInstrument>  \n                    ))}\n                </InstrumentName>\n            </ButtonsGrid>\n\n            <Play onClick={()=>PlayMusic()}>\n                {isPlaying ? \"stop\" : \"play\"}\n            </Play>\n            <TempoDiv>\n                <Tempo type=\"text\" onChange={handleChangeTempo} value={tempo} size=\"10\"/>\n                <h3>BPM</h3>\n            </TempoDiv>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: auto;\nheight: 100%;\n`\nconst ButtonsGrid = styled.div`\nheight: 100%;\nwidth: 30%;\ndisplay: flex;\n    @media only screen and ${Breakpoints.device.sm}{\n        width: 100%;\n    }\n`\nconst GridColumn = styled.div`\ndisplay: flex;\nflex-direction: column;\n    \n`\nconst GridButton = ({instrument, isActive, activeColor, ...rest}) =>{\n    const classes = isActive ? \"note note--active\" : \"note\"\n    return (\n        <button className={classes+activeColor}{...rest}>\n\n        </button>\n    )\n}\nconst GridInstrument = styled.h2`\ncolor : inherit;\npadding-bottom : 8px;\nmargin-left : 20px;\n`\n\nconst InstrumentName = styled.div`\n    display flex;\n    flex-direction : column;\n`\n\nconst Play = styled.button`\npadding : 0.8rem 1.5rem;\ntext-transform : uppercase;\nmargin-bottom: 1rem;\nmargin-top: 2rem;\nmargin-left: auto;\nmargin-right: auto;\nborder-radius: 4px;\ncursor: pointer;\n`\nconst TempoDiv = styled.div`\ndisplay : flex;\nflex-direction : column;\nalign-items: center;\nh3{\n    margin-top : 10px;\n    margin-bottom: 40px;\n}\n`\nconst Tempo = styled.input`\ntext-align : center;\nbackground-color : ${props => props.theme.inputColor};\nborder-color : ${props => props.theme.mainColor};\n    \n`\nconst mapStateToProps = (state) => ({\n    columnNumber : state.columnNumber\n})\n\nexport default connect(mapStateToProps)(Buttons)\n","import Styled from 'styled-components'\nimport Select from './Select'\nimport Buttons from './Buttons'\n\n\nconst Home = () => {\n\n\n    return (\n        <Wrapper>\n            <Select />\n            <Buttons />\n        </Wrapper>\n    )\n}\n\nconst Wrapper = Styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100%;\n`\n\n\nexport default Home\n","import './App.css';\nimport Layout from 'components/UI/Layout'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from \"./components/Home\"\n\nexport default function App() {\n  return(\n    <Router>\n      <Layout>\n        <Switch>\n          <Route component={Home} path={\"/\"} />\n        </Switch>\n      </Layout>\n    </Router>\n  )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}